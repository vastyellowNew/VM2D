/*!
\file
\brief Заголовочный файл с описанием класса Parallel
\author Марчевский Илья Константинович
\author Кузьмина Ксения Сергеевна
\author Рятина Евгения Павловна
\version 1.0
\date 1 декабря 2017 г.
*/

#ifndef PARALLEL_H
#define PARALLEL_H

#include <vector>

#include "mpi.h"

/*!
\brief Класс, опеделяющий параметры исполнения задачи в параллельном MPI-режиме

\author Марчевский Илья Константинович
\author Кузьмина Ксения Сергеевна
\author Рятина Евгения Павловна
\version 1.0
\date 1 декабря 2017 г.
*/
class Parallel
{
public:
	/// Коммуникатор для решения конкретной задачи
	MPI_Comm commWork;

	/// Локальный номер процессора, решающего конкретную задачу
	int myidWork;     

	/// Число процессоров, решающих конкретную задачу
	int nProcWork;    

	/// \brief Список из чисел витков циклов, предназначенных для каждого процессора
	///
	/// Заполняется при вызове функции SplitMPI
	/// \warning Актуален до следующего вызова SplitMPI с другим параметром общего числа витков цикла
	mutable std::vector<int> len;
	
	/// \brief Число витков, предназначенное текущему процессору
	///
	/// Заполняется при вызове функции SplitMPI
	/// \warning Актуально до следующего вызова SplitMPI с другим параметром общего числа витков цикла
	mutable int myLen;

	/// \brief Индекс первого витка из числа витков, предназначенных текущему процессору
	///
	/// Заполняется при вызове функции SplitMPI
	/// \warning Актуально до следующего вызова SplitMPI с другим параметром общего числа витков цикла
	mutable int myDisp;

	/// \brief Общее число витков, разделенное между всеми процессорами
	///
	/// Заполняется при вызове функции SplitMPI
	/// \warning Актуально до следующего вызова SplitMPI с другим параметром общего числа витков цикла
	mutable int totalLen;

	/// \brief Список, определяющий номер витка цикла, с которого должен начинать работу данный процессор
	///
	/// Заполняется при вызове функции SplitMPI
	/// \warning Актуален до следующего вызова SplitMPI с другим параметром общего числа витков цикла
	mutable std::vector<int> disp;

	/// \brief Распределение задач по процессорам
	///
	/// Заполняет следующие списки (они оформлены как mutable, поэтому могут быть изменены):
	/// - len --- сколько витков цикла должен сделать каждый процессор
	/// - disp --- с какого витка цикла должен начинать работу каждый процессор
	///
	/// \param[in] n число распределяемых витков цикла
	void SplitMPI(int n) const;	

	/// Рассылка всего массива распределения витков цикла по всем процессорам
	void BCastAllLenDisp() const;

};
 
#endif
